# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="maniek"

# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Comment this out to disable bi-weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomment to change how many often would you like to wait before auto-updates occur? (in days)
# export UPDATE_ZSH_DAYS=13

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
# COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(git git-extras svn sudo vi-mode autojump cp extract pip lol nyan screen)

if [ -f $ZSH/oh-my-zsh.sh ]
then
    source $ZSH/oh-my-zsh.sh
else
    echo "INFO: oh-my-zsh not installed"
fi

# http://chneukirchen.org/blog/archive/2011/02/10-more-zsh-tricks-you-may-not-know.html
## Force file name completion on C-x TAB, Shift-TAB.
zle -C complete-files complete-word _generic
zstyle ':completion:complete-files:*' completer _files
bindkey "^X^I" complete-files
bindkey "^[[Z" complete-files
# Force menu on C-x RET.
zle -C complete-first complete-word _generic
zstyle ':completion:complete-first:*' menu yes
bindkey "^X^M" complete-first

HOSTNAME=$(hostname)
if [[ "$HOSTNAME" == "lynx" ]]
then
    export HOST_PROMPT_COLOR='green'
elif [[ "$HOSTNAME" == "mariusz-desktop" ]]
then
    export HOST_PROMPT_COLOR='yellow'
elif [[ "$HOSTNAME" == "cassiopeia" ]]
then
    export HOST_PROMPT_COLOR='cyan'
else
    export HOST_PROMPT_COLOR='white'
fi

export VIRTUAL_ENV_DISABLE_PROMPT=1
source ~/.zsh/zshrc_global

if [ -f ~/.utils/utils.rc ]
then
    source ~/.utils/utils.rc
else
    echo "INFO: utils not installed"
fi

if [ -f /usr/share/virtualenvwrapper/virtualenvwrapper.sh ]
then
    source /usr/share/virtualenvwrapper/virtualenvwrapper.sh
elif [ -f /usr/local/bin/virtualenvwrapper.sh ]
then
    source /usr/local/bin/virtualenvwrapper.sh 
else
    echo "INFO: virtualenvwrapper not installed"
fi

export PATH=/home/$USER/bin:$PATH
#export PATH=$PATH:/usr/bin/site_perl/
#export PYTHONPATH="/home/maniek/programing/django/lib/python2.6/site-packages"
export PYTHONIOENCODING='utf-8'

export PATH="$HOME/.linuxbrew/bin:$PATH"
export MANPATH="$HOME/.linuxbrew/share/man:$MANPATH"
export INFOPATH="$HOME/.linuxbrew/share/info:$INFOPATH"
export XDG_DATA_DIRS="$HOME/.linuxbrew/share:$XDG_DATA_DIRS"

export MPD_HOST="127.0.0.1"
export MPD_PORT="6600"

export CVSROOT=":pserver:maniek@rshare.pl:/home/cvs/"

alias halt='sudo halt'
alias reboot='sudo reboot'
alias E='gvim --remote-tab'

function VENV
{
    [[ -z $1 ]] && echo "No virtualenv specified" && exit 1
    source ~/"virtualenv/$1/bin/activate"
}

function vim_venv_name {
    if [[ -n $VIRTUAL_ENV ]]
    then
        basename $VIRTUAL_ENV
    elif [[ -n $NODE_VIRTUAL_ENV ]]
    then
        basename $NODE_VIRTUAL_ENV
    else
        echo "VIM"
    fi
}

if [ $EDITOR = "vim" ]
then
    if which gvim > /dev/null
    then
        GVIM_BIN='gvim'
    elif which vim.gtk3-py2 > /dev/null
    then
        GVIM_BIN='vim.gtk3-py2'
    elif which vim.gtk-py2 > /dev/null
    then
        GVIM_BIN='vim.gtk-py2'
    else
        echo "Could not found GVIM binary"
        GVIM_BIN='gvim'
    fi
    alias E='${GVIM_BIN} -g --servername "$(vim_venv_name)" --remote-tab'
elif [ $EDITOR = "nvim" ]
then
    # pip3 install neovim-remote
    alias E='nvr --servername "/tmp/nvr_$($(vim_venv_name))" --remote-tab'
    alias EE='nvr --servername "/tmp/nvr_$($(vim_venv_name))"'
fi
